

name: Azure VM deploy

on: 
  workflow_call:
    inputs:
      resourceGroup:
        type: string
        required: true
      vmId:
        type: string
        required: true
    secrets:
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_CREDENTIALS:
        required: true
      AZURE_STORAGE_KEY:
        required: true
      AZURE_ARTIFACTS_LOCATION:
        required: true
      AZURE_ARTIFACTS_LOCATION_SAS_TOKEN:
        required: true
      VM_ADMIN_USERNAME:
        required: true
      VM_ADMIN_PUBLIC_KEY:
        required: true

  workflow_dispatch:
    inputs:
      resourceGroup:
        description: 'Azure resource group used for deployment'     
        required: true
        default: my-resource-group-1
        type: string
      vmId:
        type: string
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
        default: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS:
        required: true
        default: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_STORAGE_KEY:
        required: true
        default: ${{ secrets.AZURE_STORAGE_KEY }}
      AZURE_ARTIFACTS_LOCATION:
        required: true
        default: ${{ secrets.AZURE_ARTIFACTS_LOCATION }}
      AZURE_ARTIFACTS_LOCATION_SAS_TOKEN:
        required: true
        default: ${{ secrets.AZURE_ARTIFACTS_LOCATION_SAS_TOKEN }}
      VM_ADMIN_USERNAME:
        required: true
        default: ${{ secrets.VM_ADMIN_USERNAME }}
      VM_ADMIN_PUBLIC_KEY:
        required: true
        default: ${{ secrets.VM_ADMIN_PUBLIC_KEY }}


jobs:

  deploy: 
    runs-on: ubuntu-latest
    steps:

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: List application
        id: app
        uses: azure/CLI@v1
        with:
          inlineScript: |
              version=$(az storage file list --account-key ${{ secrets.AZURE_STORAGE_KEY }} --account-name ovistorageaccount --share-name app --query "[].{name:name}" --output tsv)
              echo "::set-output name=value::$version"

      - name: App version
        run: echo ${{ steps.app.outputs.value }} 

      - name: Deploy infrastructure (ARM)
        id: infra
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ inputs.resourceGroup }}
          template: azure/vm-deploy.json
          parameters:
            _artifactsLocation="${{ secrets.AZURE_ARTIFACTS_LOCATION }}"
            _artifactsLocationSasToken="${{ secrets.AZURE_ARTIFACTS_LOCATION_SAS_TOKEN }}"            
            vmId=${{ inputs.vmId }}
            adminUsername=${{ secrets.VM_ADMIN_USERNAME }}
            adminPublicKey="${{ secrets.VM_ADMIN_PUBLIC_KEY }}"
            application=${{ steps.app.outputs.value }}            
